from pymongo import MongoClient
db=MongoClient()
dmn=db['Sensors_Data']
col=dmn['device_logs']
table_name=db['Sensors_Data']
dev_dup_logs=table_name['device_duplicate_logs']
d=dev_dup_logs.find()
db_exist_data=[]
for z in d:
   print(z)
  
'''count=0
w=2
for j in get_database_data:
    count+=1
    x=col.update_one({'_id':j},{"$set":{'notification.intervel_value':w}})
   ''' 
#data=[{'sensor_id': 1000100, 'mac_id': '1A:00:01:00:0F:00', 'sensor_type': 2, 'packet_number': 5000, 'time_stamp': '2022-12-30 17:40:00', 'reserved_packet': 0,  'payload': {'battery':60,'temperature': 40.0, 'humidity': 90.0}, 'gateway_id': '67010B0007'},{'sensor_id': 1000200, 'mac_id': '1A:00:01:00:0F:00', 'sensor_type': 2, 'packet_number': 5000, 'time_stamp': '2022-12-30 17:40:00', 'reserved_packet': 0,  'payload': {'battery':60,'temperature': 60.0, 'humidity': 90.0}, 'gateway_id': '67010B0007'},{'sensor_id': 1000300, 'mac_id': '1A:00:01:00:0F:00', 'sensor_type': 2, 'packet_number': 5000, 'time_stamp': '2022-12-30 17:40:00', 'reserved_packet': 0,  'payload': {'battery':60,'temperature': 50.0, 'humidity': 90.0}, 'gateway_id': '67010B0007'},{'sensor_id': 1000400, 'mac_id': '1A:00:01:00:0F:00', 'sensor_type': 2, 'packet_number': 5000, 'time_stamp': '2022-12-30 17:40:00', 'reserved_packet': 0,  'payload': {'battery':60,'temperature': 10.0, 'humidity': 40.0}, 'gateway_id': '67010B0007'},{'sensor_id': 1000500, 'mac_id': '1A:00:01:00:0F:00', 'sensor_type': 2, 'packet_number': 5000, 'time_stamp': '2022-12-30 17:40:00', 'reserved_packet': 0, 'payload': {'battery':60,'temperature': 10.0, 'humidity': 80.0}, 'gateway_id': '67010B0007'},{'sensor_id': 1000600, 'mac_id': '1A:00:01:00:0F:00', 'sensor_type': 2, 'packet_number': 5000, 'time_stamp': '2022-12-30 17:40:00', 'reserved_packet': 0, 'payload': {'battery':60,'temperature': 10.0, 'humidity': 29.0}, 'gateway_id': '67010B0007'},{'sensor_id': 1000700, 'mac_id': '1A:00:01:00:0F:00', 'sensor_type': 2, 'packet_number': 5000, 'time_stamp': '2022-12-30 17:40:00', 'reserved_packet': 0, 'payload': {'battery':60,'temperature': 10.0, 'humidity': 80.0}, 'gateway_id': '67010B0007'},{'sensor_id': 1000800, 'mac_id': '1A:00:01:00:0F:00', 'sensor_type': 2, 'packet_number': 5000, 'time_stamp': '2022-12-30 17:40:00', 'reserved_packet': 0, 'payload': {'battery':60,'temperature': 10.0, 'humidity': 10.0}, 'gateway_id': '67010B0007'},{'sensor_id': 1000900, 'mac_id': '1A:00:01:00:0F:00', 'sensor_type': 2, 'packet_number': 5000, 'time_stamp': '2022-12-30 17:40:00', 'reserved_packet': 0, 'payload': {'battery':60,'temperature': 20.0, 'humidity': 10.0}, 'gateway_id': '67010B0007'},{'sensor_id': 2000100, 'mac_id': '1A:00:01:00:0F:00', 'sensor_type': 2, 'packet_number': 5000, 'time_stamp': '2022-12-30 17:40:00', 'reserved_packet': 0,  'payload': {'battery':60,'temperature': 30.0, 'humidity': 10.0}, 'gateway_id': '67010B0007'},{'sensor_id': 2000200, 'mac_id': '1A:00:01:00:0F:00', 'sensor_type': 2, 'packet_number': 5000, 'time_stamp': '2022-12-30 17:40:00', 'reserved_packet': 0,  'payload': {'battery':60,'temperature': 45.0, 'humidity': 10.0}, 'gateway_id': '67010B0007'},{'sensor_id': 2000300, 'mac_id': '1A:00:01:00:0F:00', 'sensor_type': 2, 'packet_number': 5000, 'time_stamp': '2022-12-30 17:40:00', 'reserved_packet': 0,  'payload': {'battery':60,'temperature': 72.0, 'humidity': 10.0}, 'gateway_id': '67010B0007'},{'sensor_id': 2000400, 'mac_id': '1A:00:01:00:0F:00', 'sensor_type': 2, 'packet_number': 5000, 'time_stamp': '2022-12-30 17:40:00', 'reserved_packet': 0,  'payload': {'battery':60,'temperature': 73.0, 'humidity': 73.0}, 'gateway_id': '67010B0007'},{'sensor_id': 2000500, 'mac_id': '1A:00:01:00:0F:00', 'sensor_type': 2, 'packet_number': 5000, 'time_stamp': '2022-12-30 17:40:00', 'reserved_packet': 0,  'payload': {'battery':60,'temperature': 4.0, 'humidity': 73.0}, 'gateway_id': '67010B0007'},{'sensor_id': 2000600, 'mac_id': '1A:00:01:00:0F:00', 'sensor_type': 2, 'packet_number': 5000, 'time_stamp': '2022-12-30 17:40:00', 'reserved_packet': 0,  'payload': {'battery':60,'temperature': 6.0, 'humidity': 73.0}, 'gateway_id': '67010B0007'},{'sensor_id': 2000700, 'mac_id': '1A:00:01:00:0F:00', 'sensor_type': 2, 'packet_number': 5000, 'time_stamp': '2022-12-30 17:40:00', 'reserved_packet': 0,  'payload': {'battery':60,'temperature': 9.0, 'humidity': 73.0}, 'gateway_id': '67010B0007'},{'sensor_id': 2000800, 'mac_id': '1A:00:01:00:0F:00', 'sensor_type': 2, 'packet_number': 5000, 'time_stamp': '2022-12-30 17:40:00', 'reserved_packet': 0,  'payload': {'battery':60,'temperature': 19.0, 'humidity': 73.0}, 'gateway_id': '67010B0007'},{'sensor_id': 2000900, 'mac_id': '1A:00:01:00:0F:00', 'sensor_type': 2, 'packet_number': 5000, 'time_stamp': '2022-12-30 17:40:00', 'reserved_packet': 0,  'payload': {'battery':60,'temperature': 84.0, 'humidity': 73.0}, 'gateway_id': '67010B0007'},{'sensor_id': 3000100, 'mac_id': '1A:00:01:00:0F:00', 'sensor_type': 2, 'packet_number': 5000, 'time_stamp': '2022-12-30 17:40:00', 'reserved_packet': 0,  'payload': {'battery':60,'temperature': 19.0, 'humidity': 73.0}, 'gateway_id': '67010B0007'},{'sensor_id': 3000200, 'mac_id': '1A:00:01:00:0F:00', 'sensor_type': 2, 'packet_number': 5000, 'time_stamp': '2022-12-30 17:40:00', 'reserved_packet': 0,  'payload': {'battery':60,'temperature': 73.0, 'humidity': 9.0}, 'gateway_id': '67010B0007'},{'sensor_id': 3000300, 'mac_id': '1A:00:01:00:0F:00', 'sensor_type': 2, 'packet_number': 5000, 'time_stamp': '2022-12-30 17:40:00', 'reserved_packet': 0,  'payload': {'battery':60,'temperature': 19.0, 'humidity': 71.0}, 'gateway_id': '67010B0007'},{'sensor_id': 3000400, 'mac_id': '1A:00:01:00:0F:00', 'sensor_type': 2, 'packet_number': 5000, 'time_stamp': '2022-12-30 17:40:00', 'reserved_packet': 0,  'payload': {'battery':60,'temperature': 19.0, 'humidity': 19.0}, 'gateway_id': '67010B0007'},{'sensor_id': 3000500, 'mac_id': '1A:00:01:00:0F:00', 'sensor_type': 2, 'packet_number': 5000, 'time_stamp': '2022-12-30 17:40:00', 'reserved_packet': 0,  'payload': {'battery':60,'temperature': 9.0, 'humidity': 19.0}, 'gateway_id': '67010B0007'},{'sensor_id': 3000600, 'mac_id': '1A:00:01:00:0F:00', 'sensor_type': 2, 'packet_number': 5000, 'time_stamp': '2022-12-30 17:40:00', 'reserved_packet': 0,  'payload': {'temperature': 13.0,"battery":60, 'humidity': 19.0}, 'gateway_id': '67010B0007'},{'sensor_id': 3000700, 'mac_id': '1A:00:01:00:0F:00', 'sensor_type': 2, 'packet_number': 5000, 'time_stamp': '2022-12-30 17:40:00', 'reserved_packet': 0,  'payload': {'temperature': 82.0,"battery":60, 'humidity': 19.0}, 'gateway_id': '67010B0007'},{'sensor_id': 3000800, 'mac_id': '1A:00:01:00:0F:00', 'sensor_type': 2, 'packet_number': 5000, 'time_stamp': '2022-12-30 17:40:00', 'reserved_packet': 0,  'payload': {'temperature': 91.0,"battery":60, 'humidity': 19.0}, 'gateway_id': '67010B0007'},{'sensor_id': 3000900, 'mac_id': '1A:00:01:00:0F:00', 'sensor_type': 2, 'packet_number': 5000, 'time_stamp': '2022-12-30 17:40:00', 'reserved_packet': 0,  'payload': {'temperature': 19.0,"battery":60, 'humidity': 19.0}, 'gateway_id': '67010B0007'},{'sensor_id': 4000100, 'mac_id': '1A:00:01:00:0F:00', 'sensor_type': 2, 'packet_number': 5000, 'time_stamp': '2022-12-30 17:40:00', 'reserved_packet': 0,  'payload': {'battery':60,'temperature': 8.0, 'humidity': 19.0}, 'gateway_id': '67010B0007'}]
'''actions=[['TEMPERATURE_LOW'],['TEMPERATURE_HIGH'],sorted(['TEMPERATURE_LOW','TEMPERATURE_HIGH']),['HUMIDITY_LOW'],['HUMIDITY_HIGH'],sorted(['HUMIDITY_LOW','HUMIDITY_HIGH']),['BATTERY_LOW'],sorted(['TEMPERATURE_LOW','HUMIDITY_LOW']),sorted(['TEMPERATURE_LOW','HUMIDITY_HIGH']),sorted(['TEMPERATURE_LOW','HUMIDITY_LOW','HUMIDITY_HIGH']),sorted(['TEMPERATURE_HIGH','HUMIDITY_LOW']),sorted(['TEMPERATURE_HIGH','HUMIDITY_HIGH']),sorted(['TEMPERATURE_HIGH','HUMIDITY_LOW','HUMIDITY_HIGH']),sorted(['TEMPERATURE_LOW','TEMPERATURE_HIGH','HUMIDITY_LOW']),sorted(['TEMPERATURE_LOW','TEMPERATURE_HIGH','HUMIDITY_HIGH']),sorted(['TEMPERATURE_LOW','TEMPERATURE_HIGH','HUMIDITY_LOW','HUMIDITY_HIGH']),sorted(['TEMPERATURE_LOW','BATTERY_LOW']),sorted(['TEMPERATURE_HIGH','BATTERY_LOW']),sorted(['TEMPERATURE_LOW','TEMPERATURE_HIGH','BATTERY_LOW']),sorted(['HUMIDITY_LOW','BATTERY_LOW']),sorted(['HUMIDITY_HIGH','BATTERY_LOW']),sorted(['HUMIDITY_LOW','HUMIDITY_HIGH','BATTERY_LOW']),sorted(['TEMPERATURE_LOW','HUMIDITY_LOW','BATTERY_LOW']),sorted(['TEMPERATURE_LOW','HUMIDITY_LOW','HUMIDITY_HIGH','BATTERY_LOW']),sorted(['TEMPERATURE_HIGH','HUMIDITY_LOW','BATTERY_LOW']),sorted(['TEMPERATURE_HIGH','HUMIDITY_LOW','HUMIDITY_HIGH','BATTERY_LOW']),sorted(['TEMPERATURE_LOW','TEMPERATURE_HIGH','HUMIDITY_LOW','BATTERY_LOW']),sorted(['TEMPERATURE_LOW','TEMPERATURE_HIGH','HUMIDITY_LOW','HUMIDITY_HIGH','BATTERY_LOW'])]
data=[{'sensor_id': 2000400, 'mac_id': '1A:00:01:00:0F:00', 'sensor_type': 2, 'packet_number': 5000, 'time_stamp': '2022-12-30 17:40:00', 'reserved_packet': 0, 'payload': {'temperature': 60.0, 'humidity': 90.0, 'battery': 60}, 'gateway_id': '67010B0007'}]
for t in find_database_data:
    get_database_data.append(t)
for j in range(len(get_database_data)):
    if get_database_data[j]['notification']!=None:
        h=col.find_one({'_id':get_database_data[j]['_id']})
        if h['product_code']=='BLE_TH':
            get_notification_sensor_ids.append(int(get_database_data[j]['_id']))
t_k={"TEMPERATURE_LOW":['temperature','min'],"TEMPERATURE_HIGH":['temperature','max'],"HUMIDITY_LOW":['humidity','min'],"HUMIDITY_HIGH":['humidity','max'],"BATTERY_LOW":['battery','min']}
for u in data:
    
    if u['sensor_id'] in get_notification_sensor_ids:
        h=col.find_one({"_id":str(u['sensor_id'])})
        #print(h['notification']['action'])
        if sorted(h['notification']['action']) in actions:
            for k in h['notification']['action']:
                if k.endswith("LOW"):
                    if u['payload'][str(t_k[k][0])]<float(h['configuration_params'][str(t_k[k][0])][str(t_k[k][1])]):
                        print(k,u['payload'][str(t_k[k][0])],h['configuration_params'][str(t_k[k][0])][str(t_k[k][1])])
                        
                    
                elif k.endswith("HIGH"):
                    if u['payload'][str(t_k[k][0])]>float(h['configuration_params'][str(t_k[k][0])][str(t_k[k][1])]):       
                        print(k,u['payload'][str(t_k[k][0])],h['configuration_params'][str(t_k[k][0])][str(t_k[k][1])])
'''
